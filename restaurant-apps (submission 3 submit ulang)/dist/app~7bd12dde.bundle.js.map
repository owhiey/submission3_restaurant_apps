{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA4BF,QAzB8B,CACtBC,cAAa,SAACC,GAAI,oGAEjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAL5B,EAMxB,EACME,iBAAgB,WAAG,iHACTT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD1B,EAEzB,EACMY,cAAa,SAACC,GAAY,oGAGzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAP5B,EAQhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,gDC3BF,QALqB,CACnBS,gBAAiB,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QACnCoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCHhD,4wNAgBA,QAfyB,yBADzB,4FACyB,SADzB,QAMG,EALsB,EAYtB,OAbH,EACyB,OADzB,EACyB,4CACvB,sGACyBW,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BhB,GAAE,yFACPW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,cAEaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaV,YAAU,2CAC/B,+CAbH,6DAaG,EAZsB,mCCOzB,QATe,CACbY,SAAU,uCACVC,eAAgB,qDAChBC,YAAY,IAAIC,MAAOC,cACvBhC,cAAe,gCACfE,iBAAkB,EAClBC,kBAAmB,+ECwBf8B,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,UAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF,IAEsBP,SAASC,cAAc,cAC/BI,iBAAiB,SAAS,SAACG,GACvCA,EAAMC,iBACNT,SAASC,cAAc,QAAQS,OACjC","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurantapi-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    // return (await dbPromise).get(OBJECT_STORE_NAME, id);\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurant() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(restaurant) {\n    // return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n    // eslint-disable-next-line no-prototype-builtins\n    if (!restaurant.hasOwnProperty('id')) {\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  LIST_RESTAURANT: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass RestaurantAPISource {\n  static async listRestaurant() {\n    const response = await fetch(API_ENDPOINT.LIST_RESTAURANT);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailRestaurant(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    // return response.json();\n    const responseJson = await response.json();\n    return responseJson.restaurant;\n  }\n}\n\nexport default RestaurantAPISource;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  CACHE_NAME: new Date().toISOString(),\n  DATABASE_NAME: 'restaurant-catalogue-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurants',\n};\n\nexport default CONFIG;\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\n/* eslint-disable no-shadow */\nimport 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport '../styles/skip-link.css';\n// import data from '../DATA.json';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\n// const menu = document.querySelector('#hamburgerButton');\n// const hero = document.querySelector('.hero');\n// const main = document.querySelector('main');\n// const drawer = document.querySelector('#drawer');\n\n// menu.addEventListener('click', (e) => {\n//   drawer.classList.toggle('open');\n//   e.stopPropagation();\n// });\n\n// hero.addEventListener('click', () => {\n//   drawer.classList.remove('open');\n// });\n\n// main.addEventListener('click', (e) => {\n//   drawer.classList.remove('open');\n//   e.stopPropagation();\n// });\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n\nconst skipToContent = document.querySelector('.skip-link');\nskipToContent.addEventListener('click', (event) => {\n  event.preventDefault();\n  document.querySelector('main').focus();\n});\n\n// const cards = document.querySelector('.cards');\n// console.log(data);\n\n// const listRestaurant = (data) => {\n//   cards.innerHTML = '';\n//   data.forEach((resto) => {\n//     const {\n//       name,\n//       description,\n//       pictureId,\n//       city,\n//       rating,\n//     } = resto;\n//     const listResto = document.createElement('div');\n//     listResto.innerHTML = `\n//         <article class=\"card-item\">\n//         <img class=\"card-item__thumbnail\" src=\"${pictureId}\" width=\"100%\" height=\"250\" alt=\"gambar restoran indonesia\">\n//         <p class=\"card-item__badge\">${city}</p>\n//         <div class=\"card-item__content\">\n//             <p class=\"card-item__rating\">Rating ${rating}</p>\n//             <h2 class=\"card-item__title\"><a href=\"#\">${name}</a></h2>\n//             <p class=\"card-item__description\">${description}</p>\n//         </div>\n//         </article>\n//         `;\n//     cards.appendChild(listResto);\n//   });\n// };\n// listRestaurant(data.restaurants);\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","LIST_RESTAURANT","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister","event","preventDefault","focus"],"sourceRoot":""}